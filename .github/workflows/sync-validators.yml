name: Sync Validators

on:
  # Run when lib/validators or scripts/validation changes
  push:
    paths:
      - 'lib/validators/**'
      - 'scripts/validation/**'
    branches: [ main, develop ]
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force-sync:
        description: 'Force sync even if no changes detected'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  actions: read

jobs:
  detect-changes:
    name: Detect Changes in Validators
    runs-on: ubuntu-latest
    outputs:
      lib-changed: ${{ steps.changes.outputs.lib-changed }}
      scripts-changed: ${{ steps.changes.outputs.scripts-changed }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Detect changes
      id: changes
      run: |
        # Check if lib/validators changed
        if git diff --name-only HEAD~1 HEAD | grep -q "lib/validators/"; then
          echo "lib-changed=true" >> $GITHUB_OUTPUT
          echo "üìù lib/validators changed"
        else
          echo "lib-changed=false" >> $GITHUB_OUTPUT
          echo "üìù lib/validators unchanged"
        fi
        
        # Check if scripts/validation changed
        if git diff --name-only HEAD~1 HEAD | grep -q "scripts/validation/"; then
          echo "scripts-changed=true" >> $GITHUB_OUTPUT
          echo "üìù scripts/validation changed"
        else
          echo "scripts-changed=false" >> $GITHUB_OUTPUT
          echo "üìù scripts/validation unchanged"
        fi

  sync-eslint-plugin:
    name: Sync ESLint Plugin
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.lib-changed == 'true' || github.event.inputs.force-sync == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: ./.github/actions/setup-node
      with:
        install-dependencies: 'false'
    
    - name: Sync lib/validators to ESLint plugin
      run: |
        echo "Syncing lib/validators to eslint-plugin-codekeeper/lib/validators..."
        
        # Copy validators to ESLint plugin
        cp -r lib/ eslint-plugin-codekeeper/
        
        echo "‚úÖ Sync completed"
    
    - name: Test ESLint plugin after sync
      run: |
        echo "Testing ESLint plugin functionality..."
        node test-validation/test-eslint-plugin.js
        echo "‚úÖ ESLint plugin tests passed"
    
    - name: Commit changes if any
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        if git diff --name-only | grep -q eslint-plugin-codekeeper; then
          git add eslint-plugin-codekeeper/lib/
          
          # Create multi-line commit message
          cat > commit_message.txt << 'EOF'
          üîÑ Auto-sync: Update ESLint plugin validators from lib/
          
          This commit automatically syncs the validation logic from lib/validators/
          to the ESLint plugin to keep both approaches in sync.
          
          ü§ñ Generated by GitHub Actions workflow
          EOF
          
          git commit -F commit_message.txt
          rm commit_message.txt
          
          # Push with error handling
          if git push origin ${{ github.ref_name }}; then
            echo "‚úÖ Changes committed and pushed"
          else
            echo "‚ùå Failed to push changes - may need manual intervention"
            exit 1
          fi
        else
          echo "‚úÖ No changes to commit"
        fi

  validate-sync:
    name: Validate Synchronization
    runs-on: ubuntu-latest
    needs: [detect-changes, sync-eslint-plugin]
    if: always() # Run even if previous jobs fail
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: ./.github/actions/setup-node
      with:
        install-dependencies: 'false'
    
    - name: Verify validators are in sync
      run: |
        echo "Verifying that validators are synchronized..."
        
        # Check if files exist and are identical
        sync_issues=0
        
        for validator in lib/validators/*.js; do
          basename=$(basename "$validator")
          eslint_validator="eslint-plugin-codekeeper/lib/validators/$basename"
          
          if [ ! -f "$eslint_validator" ]; then
            echo "‚ùå Missing: $eslint_validator"
            sync_issues=$((sync_issues + 1))
            continue
          fi
          
          if ! diff -q "$validator" "$eslint_validator" >/dev/null; then
            echo "‚ùå Difference detected: $validator vs $eslint_validator"
            sync_issues=$((sync_issues + 1))
            echo "Diff:"
            diff "$validator" "$eslint_validator" | head -20
          else
            echo "‚úÖ In sync: $basename"
          fi
        done
        
        if [ $sync_issues -gt 0 ]; then
          echo "‚ùå Found $sync_issues synchronization issues"
          echo "Run: cp -r lib/ eslint-plugin-codekeeper/"
          exit 1
        else
          echo "‚úÖ All validators are synchronized"
        fi
    
    - name: Test both approaches produce consistent results
      run: |
        echo "Testing consistency between standalone scripts and ESLint plugin..."
        
        # Test that both detect violations in our test fixtures
        echo "Testing AS casts detection..."
        
        # Run standalone script (should detect violations)
        if node scripts/validation/check-as-casts.js test-validation/fixtures/bad-as-casts.tsx 2>&1 | grep -q "as "; then
          echo "‚úÖ Standalone script detects AS casts violations"
        else
          echo "‚ùå Standalone script failed to detect AS casts violations"
          exit 1
        fi
        
        # Run ESLint plugin test (should detect violations)
        if node test-validation/test-eslint-plugin.js 2>&1 | grep -q "Found.*violation(s)"; then
          echo "‚úÖ ESLint plugin detects AS casts violations"
        else
          echo "‚ùå ESLint plugin failed to detect AS casts violations"
          exit 1
        fi
        
        echo "‚úÖ Both validation approaches are working consistently"

  notify-on-failure:
    name: Notify on Sync Failure
    runs-on: ubuntu-latest
    needs: [sync-eslint-plugin, validate-sync]
    if: failure()
    
    steps:
    - name: Create issue on sync failure
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üîÑ Validator Sync Failed',
            body: `## Validator Synchronization Failed

          The automatic synchronization between \`lib/validators/\` and \`eslint-plugin-codekeeper/lib/validators/\` has failed.

          **Workflow:** ${{ github.workflow }}
          **Run:** ${{ github.run_number }}
          **Commit:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}

          ### Action Required:
          1. Check the [workflow run logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          2. Manually sync validators: \`cp -r lib/ eslint-plugin-codekeeper/\`
          3. Test both approaches: \`node test-validation/test-eslint-plugin.js\`
          4. Commit changes if needed

          ### Auto-generated issue - safe to close after fixing
          `,
            labels: ['bug', 'automation', 'priority-high']
          });