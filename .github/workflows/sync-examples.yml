name: Sync Examples

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/validation/**'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  sync-examples:
    name: Sync Validation Scripts to Examples
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip examples]')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js with CodeKeeper
      uses: ./.github/actions/setup-node
      with:
        install-dependencies: 'false'

    - name: Sync validation scripts to examples
      run: |
        echo "🔄 Syncing validation scripts to example directories..."
        
        # List of example directories
        EXAMPLES=(
          "examples/nextjs-lefthook-example"
          "examples/react-husky-example"
        )
        
        for example_dir in "${EXAMPLES[@]}"; do
          if [ -d "$example_dir" ]; then
            echo "Syncing to $example_dir..."
            
            # Create scripts/validation directory if it doesn't exist
            mkdir -p "$example_dir/scripts/validation"
            
            # Copy all validation scripts
            cp scripts/validation/*.js "$example_dir/scripts/validation/"
            
            # Make scripts executable
            chmod +x "$example_dir/scripts/validation/"*.js
            
            echo "✅ Synced validation scripts to $example_dir"
          else
            echo "⚠️  Example directory $example_dir not found, skipping..."
          fi
        done

    - name: Test examples after sync
      run: |
        echo "🧪 Testing examples after sync..."
        
        EXAMPLES=(
          "examples/nextjs-lefthook-example"
          "examples/react-husky-example"
        )
        
        for example_dir in "${EXAMPLES[@]}"; do
          if [ -d "$example_dir" ] && [ -f "$example_dir/package.json" ]; then
            echo "Testing $example_dir..."
            cd "$example_dir"
            
            # Test that validation scripts work
            for script in scripts/validation/*.js; do
              if [ -f "$script" ]; then
                script_name=$(basename "$script")
                echo "Testing $script_name in $example_dir..."
                
                # Test syntax
                node -c "$script"
                
                # Test execution (allow failures as some may expect violations)
                node "$script" --help 2>/dev/null || echo "Script $script_name executed (may have failed as expected)"
              fi
            done
            
            cd - > /dev/null
            echo "✅ $example_dir validation complete"
          else
            echo "⚠️  Skipping $example_dir (no package.json or directory missing)"
          fi
        done

    - name: Check for changes
      id: changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "✅ Changes detected in examples"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️  No changes needed in examples"
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add examples/
        
        # Create multi-line commit message
        cat > commit_message.txt << 'EOF'
        chore: sync validation scripts to examples
        
        Auto-sync validation scripts from scripts/validation/ to example directories
        
        🤖 Generated by GitHub Actions workflow
        
        Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
        EOF
        
        git commit -F commit_message.txt
        rm commit_message.txt
        
        # Push with error handling
        if git push; then
          echo "✅ Changes committed and pushed successfully"
        else
          echo "❌ Failed to push changes - may need manual intervention"
          exit 1
        fi

    - name: Create summary
      run: |
        echo "## 🔄 Example Sync Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.changes.outputs.changes }}" == "true" ]; then
          echo "✅ **Examples Updated**: Validation scripts have been synced to example directories" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Updated Examples:" >> $GITHUB_STEP_SUMMARY
          
          for example_dir in examples/*/; do
            if [ -d "$example_dir/scripts/validation" ]; then
              example_name=$(basename "$example_dir")
              echo "- 📁 **$example_name**: Validation scripts synced" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Scripts Synced:" >> $GITHUB_STEP_SUMMARY
          for script in scripts/validation/*.js; do
            script_name=$(basename "$script")
            echo "- 📜 **$script_name**" >> $GITHUB_STEP_SUMMARY
          done
        else
          echo "ℹ️ **No Changes Needed**: Example directories are already up to date" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "_Sync completed at $(date)_" >> $GITHUB_STEP_SUMMARY